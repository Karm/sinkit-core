<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
>
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>sinkit</artifactId>
        <groupId>biz.karms.sinkit</groupId>
        <version>2.1.1</version>
    </parent>

    <artifactId>integration-tests</artifactId>
    <packaging>jar</packaging>
    <name>SinkIt integration tests</name>
    <description>SinkIt integration tests</description>

    <licenses>
        <license>
            <name>GNU General Public License, Version 3</name>
            <url>http://www.gnu.org/licenses/gpl-3.0.html</url>
            <distribution>manual</distribution>
            <comments>A free, copyleft license for software and other kinds of works</comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>karm</id>
            <name>Michal Karm Babacek</name>
            <organization>BuSab</organization>
        </developer>
    </developers>

    <dependencies>
        <dependency>
            <groupId>biz.karms.sinkit</groupId>
            <artifactId>sinkit-rest</artifactId>
            <type>war</type>
        </dependency>

        <dependency>
            <groupId>biz.karms.sinkit</groupId>
            <artifactId>sinkit-ejb</artifactId>
            <type>ejb</type>
        </dependency>

        <!-- Needed for running tests -->

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${org.testng.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.testng</groupId>
            <artifactId>arquillian-testng-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Import the CDI API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the Common Annotations API (JSR-250), we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the EJB API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>${htmlunit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.eu.ingwar.tools</groupId>
            <artifactId>arquillian-suite-extension</artifactId>
            <version>${arquillian.extension.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <!-- Set the name of the war, used as the context root when the app is deployed -->
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.compiler.plugin}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.wildfly</groupId>
                                    <artifactId>wildfly-dist</artifactId>
                                    <version>${version.wildfly}</version>
                                    <type>zip</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>target</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jboss.arquillian.maven</groupId>
                <artifactId>arquillian-maven-plugin</artifactId>
                <version>${version.arquillian_maven}</version>
                <configuration>
                    <targetDir>../ear/target</targetDir>
                    <filename>sinkit-ear.ear</filename>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <!-- The default profile skips all tests, though you can tune
                it to run just unit tests based on a custom pattern -->
            <!-- Seperate profiles are provided for running all tests, including
                Arquillian tests that execute in the specified container -->
            <id>default</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${version.surefire.plugin}</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- An optional Arquillian testing profile that executes tests
                in your WildFly instance -->
            <!-- This profile will start a new WildFly instance, and execute the
                test, shutting it down when done -->
            <!-- Run with: mvn clean test -Parq-wildfly-managed -->
            <id>arq-wildfly-managed</id>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <version>${arquillian.container.managed.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <!-- An optional Arquillian testing profile that executes tests
                in a remote WildFly instance -->
            <!-- Run with: mvn clean test -Parq-wildfly-remote -->
            <id>arq-wildfly-remote</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-remote</artifactId>
                    <version>${arquillian.container.remote}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker.plugin.version}</version>
                        <configuration>
                            <images>
                                <image>
                                    <alias>sinkit-core</alias>
                                    <name>karm/sinkit-core</name>
                                    <build>
                                        <dockerFile>../../../../Dockerfile</dockerFile>
                                        <tags>
                                            <tag>${project.version}</tag>
                                        </tags>
                                    </build>
                                    <run>
                                        <dependsOn>
                                            <container>elastic</container>
                                            <container>ispn</container>
                                        </dependsOn>



                                        <wait>
                                            <http>
                                                <url>http://127.0.0.1:8080/sinkit/rest</url>
                                                <status>200</status>
                                                <method>GET</method>
                                            </http>
                                            <shutdown>30000</shutdown>
                                            <time>30000</time>

                                        </wait>
                                        <network>
                                            <mode>host</mode>
                                        </network>
                                        <ports>
                                            <port>127.0.0.1:8080:8080</port>
                                            <port>127.0.0.1:9990:9990</port>
                                        </ports>
                                        <volumes>
                                            <bind>
                                                <volume>/tmp/proto:/tmp/proto</volume>
                                            </bind>
                                        </volumes>
                                        <env>
                                            <SINKIT_ADDR_PREFIX>127</SINKIT_ADDR_PREFIX>
                                            <SINKIT_DNS_REQUEST_LOGGING_ENABLED>True</SINKIT_DNS_REQUEST_LOGGING_ENABLED>
                                            <SINKIT_ELASTIC_CLUSTER>archive</SINKIT_ELASTIC_CLUSTER>
                                            <SINKIT_ELASTIC_HOST>127.0.0.1</SINKIT_ELASTIC_HOST>
                                            <SINKIT_ELASTIC_PORT>9300</SINKIT_ELASTIC_PORT>
                                            <SINKIT_GSB_API_KEY>mock</SINKIT_GSB_API_KEY>
                                            <SINKIT_HOTROD_HOST>127.0.0.1</SINKIT_HOTROD_HOST>
                                            <SINKIT_HOTROD_PORT>11322</SINKIT_HOTROD_PORT>
                                            <SINKIT_IOC_ACTIVE_HOURS>1</SINKIT_IOC_ACTIVE_HOURS>
                                            <SINKIT_IOC_DEACTIVATOR_SKIP>True</SINKIT_IOC_DEACTIVATOR_SKIP>
                                            <SINKIT_LOCAL_CACHE_LIFESPAN>1000</SINKIT_LOCAL_CACHE_LIFESPAN>
                                            <SINKIT_LOCAL_CACHE_SIZE>10</SINKIT_LOCAL_CACHE_SIZE>
                                            <SINKIT_LOGLEVEL>DEBUG</SINKIT_LOGLEVEL>
                                            <SINKIT_MS_RAM>256m</SINKIT_MS_RAM>
                                            <SINKIT_MX_RAM>256m</SINKIT_MX_RAM>
                                            <SINKIT_NIC>lo</SINKIT_NIC>
                                            <SINKIT_SINKHOLE_IP>127.0.0.1</SINKIT_SINKHOLE_IP>
                                            <SINKIT_SINKHOLE_IPV6>::1</SINKIT_SINKHOLE_IPV6>
                                            <SINKIT_VERIFY_CLIENT>REQUIRED</SINKIT_VERIFY_CLIENT>
                                            <SINKIT_VIRUS_TOTAL_API_KEY>mock</SINKIT_VIRUS_TOTAL_API_KEY>
                                            <SINKIT_VIRUS_TOTAL_SKIP>True</SINKIT_VIRUS_TOTAL_SKIP>
                                            <SINKIT_WHITELIST_VALID_HOURS>1</SINKIT_WHITELIST_VALID_HOURS>
                                            <SINKIT_MGMT_USER>karm</SINKIT_MGMT_USER>
                                            <SINKIT_MGMT_PASS>karm</SINKIT_MGMT_PASS>
                                            <SINKIT_WHITELIST_PROTOSTREAM_GENERATOR_D_H_M_S>* * * */30</SINKIT_WHITELIST_PROTOSTREAM_GENERATOR_D_H_M_S>
                                            <SINKIT_CUSTOMLIST_PROTOSTREAM_GENERATOR_D_H_M_S>* * * */30</SINKIT_CUSTOMLIST_PROTOSTREAM_GENERATOR_D_H_M_S>
                                            <SINKIT_IOC_PROTOSTREAM_GENERATOR_D_H_M_S>* * * */30</SINKIT_IOC_PROTOSTREAM_GENERATOR_D_H_M_S>
                                            <SINKIT_ALL_IOC_PROTOSTREAM_GENERATOR_D_H_M_S>* * * */30</SINKIT_ALL_IOC_PROTOSTREAM_GENERATOR_D_H_M_S>
                                            <SINKIT_ALL_CUSTOM_PROTOSTREAM_GENERATOR_D_H_M_S>* * * */30</SINKIT_ALL_CUSTOM_PROTOSTREAM_GENERATOR_D_H_M_S>
                                            <SINKIT_GENERATED_PROTOFILES_DIRECTORY>/tmp/proto</SINKIT_GENERATED_PROTOFILES_DIRECTORY>
                                        </env>
                                    </run>
                                </image>
                                <image>
                                    <alias>azurite</alias>
                                    <name>karm/azurite:035fca6</name>
                                    <run>
                                        <wait>
                                            <log>Azurite is listening on 10000</log>
                                            <http>
                                                <url>http://127.0.0.1:10000/</url>
                                                <status>404</status>
                                                <method>GET</method>
                                            </http>
                                            <shutdown>1000</shutdown>
                                            <exec>
                                                <postStart>src/test/resources/create-azurite-container.sh test-container</postStart>
                                            </exec>
                                            <time>10000</time>
                                        </wait>
                                        <network>
                                            <mode>host</mode>
                                        </network>
                                        <ports>
                                            <port>127.0.0.1:10000:10000</port>
                                        </ports>
                                    </run>
                                </image>
                                <image>
                                    <alias>elastic</alias>
                                    <name>registry.whalebone.io/elasticsearch:testing-3</name>
                                    <run>
                                        <dependsOn>
                                            <container>azurite</container>
                                        </dependsOn>
                                        <wait>
                                            <http>
                                                <url>http://127.0.0.1:9200/</url>
                                                <status>200</status>
                                                <method>GET</method>
                                            </http>
                                            <shutdown>1000</shutdown>
                                            <exec>
                                                <postStart>curl -XPUT http://127.0.0.1:9200/_template/iocs -d src/test/resources/elastic_iocs.json</postStart>
                                                <postStart>curl -XPUT http://127.0.0.1:9200/_template/logs -d src/test/resources/elastic_logs.json</postStart>
                                                <postStart>curl -XPUT http://127.0.0.1:9200/_template/passivedns -d src/test/resources/elastic_passivedns.json</postStart>
                                            </exec>
                                            <time>20000</time>
                                        </wait>
                                        <network>
                                            <mode>host</mode>
                                        </network>
                                        <ports>
                                            <port>127.0.0.1:9300:9300</port>
                                            <port>127.0.0.1:9200:9200</port>
                                        </ports>
                                        <env>
                                            <!-- TODO: Make address configurable, so as one doesn't have to alter /etc/hosts with 127.0.0.1 blob.core.windows.net -->
                                            <!--<AZURE_ACCOUNT>devstoreaccount1</AZURE_ACCOUNT>
                                            <AZURE_KEY>Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==</AZURE_KEY>-->
                                            <AZURE_ACCOUNT>${env.SINKIT_ELASTIC_AZURE_ACCOUNT}</AZURE_ACCOUNT>
                                            <AZURE_KEY>${env.SINKIT_ELASTIC_AZURE_KEY}</AZURE_KEY>
                                            <ES_CLUSTER>archive</ES_CLUSTER>
                                            <ES_HEAP_SIZE>128m</ES_HEAP_SIZE>
                                            <ES_HOSTS>127.0.0.1[9300]</ES_HOSTS>
                                            <ES_INT>lo</ES_INT>
                                            <ES_SERVICE_NAME>archive</ES_SERVICE_NAME>
                                            <ES_NODE_MASTER>true</ES_NODE_MASTER>
                                            <ES_NODE_DATA>true</ES_NODE_DATA>
                                            <ES_GROOVY_ENABLED>true</ES_GROOVY_ENABLED>
                                            <ES_SCRIPT_DISABLE>false</ES_SCRIPT_DISABLE>
                                            <ES_MINIMUM_MASTER_NODES>1</ES_MINIMUM_MASTER_NODES>
                                        </env>
                                    </run>
                                </image>
                                <image>
                                    <alias>ispn</alias>
                                    <name>karm/sinkit-infinispan:1.24</name>
                                    <run>
                                        <dependsOn>
                                            <container>azurite</container>
                                        </dependsOn>
                                        <wait>
                                            <tcp>
                                                <host>127.0.0.1</host>
                                                <ports>
                                                    <port>11322</port>
                                                </ports>
                                            </tcp>
                                            <shutdown>1000</shutdown>
                                            <time>30000</time>
                                        </wait>
                                        <network>
                                            <mode>host</mode>
                                        </network>
                                        <ports>
                                            <port>127.0.0.1:11322:11322</port>
                                            <port>127.0.0.1:11323:11323</port>
                                            <port>127.0.0.1:4812:4812</port>
                                            <port>127.0.0.1:4813:4813</port>
                                            <port>127.0.0.1:57700:57700</port>
                                            <port>127.0.0.1:57701:57701</port>
                                            <port>127.0.0.1:7700:7700</port>
                                            <port>127.0.0.1:7701:7701</port>
                                        </ports>
                                        <env>
                                            <!-- TODO: Make address configurable, so as one doesn't have to alter /etc/hosts with 127.0.0.1 blob.core.windows.net -->
                                            <!--<INFINISPAN_AZURE_ACCESS_KEY>Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==</INFINISPAN_AZURE_ACCESS_KEY>
                                            <INFINISPAN_AZURE_ACCOUNT_NAME>devstoreaccount1</INFINISPAN_AZURE_ACCOUNT_NAME>-->
                                            <INFINISPAN_AZURE_ACCESS_KEY>${env.SINKIT_ISPN_AZURE_KEY}</INFINISPAN_AZURE_ACCESS_KEY>
                                            <INFINISPAN_AZURE_ACCOUNT_NAME>${env.SINKIT_ISPN_AZURE_ACCOUNT}</INFINISPAN_AZURE_ACCOUNT_NAME>
                                            <INFINISPAN_AZURE_CONTAINER>karm-azureping</INFINISPAN_AZURE_CONTAINER>
                                            <TEST_NODE_NAME>node1</TEST_NODE_NAME>
                                            <TEST_NODE_OFFSET>100</TEST_NODE_OFFSET>
                                            <INFINISPAN_ADDR_PREFIX>127</INFINISPAN_ADDR_PREFIX>
                                            <INFINISPAN_LOGLEVEL>INFO</INFINISPAN_LOGLEVEL>
                                            <INFINISPAN_MS_RAM>256m</INFINISPAN_MS_RAM>
                                            <INFINISPAN_MX_RAM>256m</INFINISPAN_MX_RAM>
                                            <INFINISPAN_NIC>lo</INFINISPAN_NIC>
                                            <INFINISPAN_GMS_MAX_JOIN_ATTEMPTS>1</INFINISPAN_GMS_MAX_JOIN_ATTEMPTS>
                                        </env>
                                    </run>
                                </image>
                            </images>
                        </configuration>

                        <!-- Connect start/stop to pre- and
                             post-integration-test phase, respectively if you want to start
                             your docker containers during integration tests -->
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <!-- "build" should be used to create the images with the
                                         artifact -->
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>

